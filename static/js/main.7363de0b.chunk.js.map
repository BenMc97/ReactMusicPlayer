{"version":3,"sources":["util.js","components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","data.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["playAudio","isPlaying","audioRef","playPromise","current","play","undefined","then","audio","Player","songInfo","setSongInfo","currentSong","setIsPlaying","songs","setCurrentSong","setSongs","useEffect","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","currentIndex","findIndex","length","trackAnim","transform","animationPercentage","className","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","currentTime","style","background","color","onChange","e","target","value","min","max","duration","type","Song","src","cover","alt","name","artist","LibrarySong","songSelectHandler","a","Library","libraryStatus","chillHop","uuidv4","Nav","setLibraryStatus","faMusic","App","useRef","useState","data","timeUpdateHandlers","roundCurrent","round","roundDuration","animation","songEndHandler","onEnded","onLoadedMetadata","onTimeUpdate","ref","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7363de0b.chunk.js","sourcesContent":["export const playAudio = (isPlaying, audioRef) => {\n    if(isPlaying){\n        const playPromise = audioRef.current.play();\n        if(playPromise !== undefined){\n            playPromise.then((audio) => {\n                audioRef.current.play();\n            })\n        }\n    }\n};","import {useEffect} from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faPlay, faAngleLeft, faAngleRight, faPause} from '@fortawesome/free-solid-svg-icons';\nimport {playAudio} from '../util';\n\nconst Player = ({songInfo, setSongInfo, audioRef, currentSong, isPlaying, setIsPlaying, songs, setCurrentSong, setSongs}) => {\n    //useEffect\n    useEffect(() => {\n        const newSongs = songs.map((song) => {\n            if(song.id === currentSong.id){\n                return{\n                    ...song,\n                    active: true,\n                }\n            }\n            else{\n                return{\n                    ...song,\n                    active: false,\n                }\n            }\n        })\n        setSongs(newSongs);\n    }, [currentSong])\n    \n    //Event handlers\n    const playSongHandler = () => {\n        if(isPlaying){\n            audioRef.current.pause();\n            setIsPlaying(false);\n        }\n        else{\n            audioRef.current.play();\n            setIsPlaying(true);\n        }\n    };\n    const getTime = (time) => {\n        return(\n            Math.floor(time /60) + \":\" + (\"0\" + Math.floor(time%60)).slice(-2)\n        )\n    }\n    const dragHandler = (e) => {\n        audioRef.current.currentTime = e.target.value;\n        setSongInfo({...songInfo, currentTime: e.target.value});\n    }\n    const skipTrackHandler = (direction) => {\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n        if(direction === 'skip-forward'){\n            setCurrentSong(songs[(currentIndex+1) % songs.length]);\n        }\n        if(direction === 'skip-back'){\n            if((currentIndex -1) % songs.length === -1){\n                setCurrentSong(songs[songs.length -1]);\n                playAudio(isPlaying, audioRef);\n                return;\n            }\n            setCurrentSong(songs[(currentIndex-1) % songs.length]);\n            \n        }\n        playAudio(isPlaying, audioRef);\n    }\n    //Add styles\n    const trackAnim = {\n        transform: `translateX(${songInfo.animationPercentage}%)`\n    }\n    return(\n        <div className=\"player\">\n            <div className=\"play-control\">\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-back')} className=\"skip-back\" size=\"2x\" icon={faAngleLeft} />\n                <FontAwesomeIcon onClick={playSongHandler} className=\"play\" size=\"2x\" icon={isPlaying ? faPause : faPlay} />\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-forward')} className=\"skip-forward\" size=\"2x\" icon={faAngleRight} />\n            </div>\n            <div className=\"time-control\">\n                <p>{getTime(songInfo.currentTime)}</p>\n                <div style={{background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`}} className=\"track\">\n                    <input onChange={dragHandler} min={0} max={songInfo.duration || 0} value={songInfo.currentTime} type=\"range\" />\n                    <div style={trackAnim} className=\"animate-track\"></div>\n                </div>\n                <p>{getTime(songInfo.duration)}</p>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Player;","\n\n\nconst Song = ({currentSong}) => {\n    return(\n        <div className=\"song-container\">\n            <img src={currentSong.cover} alt=\"\" />\n            <h2>{currentSong.name}</h2>\n            <h3>{currentSong.artist}</h3>\n\n        </div>\n\n    )\n}\n\nexport default Song;","\n\n\nconst LibrarySong = ({song, songs, setCurrentSong, audioRef, setIsPlaying, id, setSongs}) => {\n    const songSelectHandler = async () => {\n        await setCurrentSong(song);\n        //add active state\n        const newSongs = songs.map((song) => {\n            if(song.id === id){\n                return{\n                    ...song,\n                    active: true,\n                }\n            }\n            else{\n                return{\n                    ...song,\n                    active: false,\n                }\n            }\n        })\n        setSongs(newSongs);\n        setIsPlaying(true);\n        audioRef.current.play();\n    }\n    return(\n        <div onClick={songSelectHandler} className={`library-song ${song.active ? 'selected' : ''}`}>\n            <img src={song.cover} alt={song.name} />\n            <div className=\"song-description\">\n                <h3>{song.name}</h3>\n                <h4>{song.artist}</h4>\n            </div>\n\n\n        </div>\n\n    )\n}\n\nexport default LibrarySong;","import LibrarySong from './LibrarySong';\n\nconst Library = ({songs, setCurrentSong, audioRef, setIsPlaying, setSongs, libraryStatus}) => {\n    return(\n        <div className={`library ${libraryStatus ? 'active-library' : ''}`}>\n            <div className=\"head\">\n                <h2>Library</h2>\n            </div>\n            <div className=\"library-songs\">\n                {songs.map((song) => (<LibrarySong setSongs={setSongs} setIsPlaying={setIsPlaying} songs={songs} setCurrentSong={setCurrentSong} song={song} id={song.id} key={song.id} audioRef={audioRef} />))}\n            </div>\n        </div>\n    )\n}\n\n\nexport default Library;","import {v4 as uuidv4} from \"uuid\";\n\nfunction chillHop(){\n    return [\n        {\n            name: \"Sleepover\",\n            artist: \"Nymano, JK the Sage\",\n            cover: \"https://chillhop.com/wp-content/uploads/2020/09/09fb436604242df99f84b9f359acb046e40d2e9e-1024x1024.jpg\",\n            id: uuidv4(),\n            active: true,\n            color: ['#715E87','#181413'],\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=10130'\n        },\n        {\n            name: \"Soil\",\n            artist: \"Philanthrope, Guillaume Muschalle\",\n            cover: \"https://chillhop.com/wp-content/uploads/2020/09/2899f7cc22ab12e17d0119819aac3ca9dbab46e6-300x300.jpg\",\n            id: uuidv4(),\n            active: false,\n            color: ['#583631','#984A44'],\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=10254'\n        },\n        {\n            name: \"Tumbling\",\n            artist: \"Swørn\",\n            cover: \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n            id: uuidv4(),\n            active: false,\n            color: ['#C14979','#361750'],\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=9225'\n        },\n        {\n            name: \"Aerials\",\n            artist: \"No Spirit, dryhope\",\n            cover: \"https://chillhop.com/wp-content/uploads/2020/04/478079cd16fca3ef62a4667dff1673e96e2b635f-1024x1024.jpg\",\n            id: uuidv4(),\n            active: false,\n            color: ['#C15448','#477E61'],\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=9423'\n        },\n        {\n            name: \"Harbor\",\n            artist: \"Stan Forebee, The Field Tapes, azula, Francis\",\n            cover: \"https://chillhop.com/wp-content/uploads/2020/11/8a0c857ddad531279d0757f5362380a6837b1b69-1024x1024.jpg\",\n            id: uuidv4(),\n            active: false,\n            color: ['#DDE9DE','#222641'],\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=11245'\n        },\n        {\n            name: \"Melancholy\",\n            artist: \"Makzo\",\n            cover: \"https://chillhop.com/wp-content/uploads/2020/11/f78c39b4bb6313ddd0354bef896c591bfb490ff8-1024x1024.jpg\",\n            id: uuidv4(),\n            active: false,\n            color: ['#FDDC67','#5065a1'],\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=11778'\n        },\n        {\n            name: \"Flushing the Stairs\",\n            artist: \"Leavv\",\n            cover: \"https://chillhop.com/wp-content/uploads/2020/09/6defa6c89a6902fdd84bccd720c2b8fd29c40990-1024x1024.jpg\",\n            id: uuidv4(),\n            active: false,\n            color: ['#033540','#879974'],\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=9917'\n        },\n        {\n            name: \"Hibiscus\",\n            artist: \"G Mills, Felty\",\n            cover: \"https://chillhop.com/wp-content/uploads/2020/07/858b533ba20ff95bf5b401089b195d1a8cb43870-1024x1024.jpg\",\n            id: uuidv4(),\n            active: false,\n            color: ['#1872B1','#E2B240'],\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=8971'\n        },\n\n\n    ]\n\n}\n\nexport default chillHop;","import {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faMusic} from '@fortawesome/free-solid-svg-icons';\n\nconst Nav = ({libraryStatus, setLibraryStatus}) => {\n    return(\n        <nav>\n            <h1>MyPlayer</h1>\n            <button onClick={() => setLibraryStatus(!libraryStatus)}>\n                Library\n                <FontAwesomeIcon icon={faMusic} />\n            </button>\n        </nav>\n    )\n}\n\nexport default Nav;","import {useState, useRef} from 'react';\n//Styles\nimport \"./styles/app.scss\";\n//Components\nimport Player from './components/Player';\nimport Song from './components/Song';\nimport Library from './components/Library';\nimport data from './data';\nimport Nav from './components/Nav';\n\n\nfunction App() {\n  const audioRef = useRef(null);\n  //State\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  const timeUpdateHandlers = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    //Calculate percentage\n    const roundCurrent = Math.round(current);\n    const roundDuration = Math.round(duration);\n    const animation = Math.round((roundCurrent  / roundDuration) *100);\n    setSongInfo({...songInfo, currentTime: current, duration: duration, animationPercentage: animation});\n  } \n  const songEndHandler = async () => {\n      let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n      await setCurrentSong(songs[(currentIndex+1) % songs.length]);\n      if (isPlaying) audioRef.current.play();\n  }\n  return (\n    <div className=\"App\">\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player setSongs={setSongs} setCurrentSong={setCurrentSong} songs={songs} songInfo={songInfo} setSongInfo={setSongInfo} audioRef={audioRef} isPlaying={isPlaying} setIsPlaying={setIsPlaying} currentSong={currentSong} />\n      <Library libraryStatus={libraryStatus} setSongs={setSongs} setIsPlaying={setIsPlaying} audioRef={audioRef} songs={songs} setCurrentSong={setCurrentSong} />\n      <audio onEnded={songEndHandler} onLoadedMetadata={timeUpdateHandlers} onTimeUpdate={timeUpdateHandlers} ref={audioRef} src={currentSong.audio} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}