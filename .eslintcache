[{"/Users/BenMcNally/react-music/src/index.js":"1","/Users/BenMcNally/react-music/src/App.js":"2","/Users/BenMcNally/react-music/src/reportWebVitals.js":"3","/Users/BenMcNally/react-music/src/components/Player.js":"4","/Users/BenMcNally/react-music/src/components/Song.js":"5","/Users/BenMcNally/react-music/src/data.js":"6","/Users/BenMcNally/react-music/src/components/Library.js":"7","/Users/BenMcNally/react-music/src/components/LibrarySong.js":"8","/Users/BenMcNally/react-music/src/components/Nav.js":"9","/Users/BenMcNally/react-music/src/util.js":"10"},{"size":478,"mtime":1608573951517,"results":"11","hashOfConfig":"12"},{"size":2073,"mtime":1609181778485,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1608573593194,"results":"14","hashOfConfig":"12"},{"size":3197,"mtime":1609186643932,"results":"15","hashOfConfig":"12"},{"size":269,"mtime":1608599519180,"results":"16","hashOfConfig":"12"},{"size":3147,"mtime":1609237015042,"results":"17","hashOfConfig":"12"},{"size":635,"mtime":1609338485852,"results":"18","hashOfConfig":"12"},{"size":1010,"mtime":1608670651679,"results":"19","hashOfConfig":"12"},{"size":443,"mtime":1608672132451,"results":"20","hashOfConfig":"12"},{"size":279,"mtime":1609067979630,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1h1qhu6",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/BenMcNally/react-music/src/index.js",[],["44","45"],"/Users/BenMcNally/react-music/src/App.js",[],"/Users/BenMcNally/react-music/src/reportWebVitals.js",[],"/Users/BenMcNally/react-music/src/components/Player.js",["46"],"import {useEffect} from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faPlay, faAngleLeft, faAngleRight, faPause} from '@fortawesome/free-solid-svg-icons';\nimport {playAudio} from '../util';\n\nconst Player = ({songInfo, setSongInfo, audioRef, currentSong, isPlaying, setIsPlaying, songs, setCurrentSong, setSongs}) => {\n    //useEffect\n    useEffect(() => {\n        const newSongs = songs.map((song) => {\n            if(song.id === currentSong.id){\n                return{\n                    ...song,\n                    active: true,\n                }\n            }\n            else{\n                return{\n                    ...song,\n                    active: false,\n                }\n            }\n        })\n        setSongs(newSongs);\n    }, [currentSong])\n    \n    //Event handlers\n    const playSongHandler = () => {\n        if(isPlaying){\n            audioRef.current.pause();\n            setIsPlaying(false);\n        }\n        else{\n            audioRef.current.play();\n            setIsPlaying(true);\n        }\n    };\n    const getTime = (time) => {\n        return(\n            Math.floor(time /60) + \":\" + (\"0\" + Math.floor(time%60)).slice(-2)\n        )\n    }\n    const dragHandler = (e) => {\n        audioRef.current.currentTime = e.target.value;\n        setSongInfo({...songInfo, currentTime: e.target.value});\n    }\n    const skipTrackHandler = (direction) => {\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n        if(direction === 'skip-forward'){\n            setCurrentSong(songs[(currentIndex+1) % songs.length]);\n        }\n        if(direction === 'skip-back'){\n            if((currentIndex -1) % songs.length === -1){\n                setCurrentSong(songs[songs.length -1]);\n                playAudio(isPlaying, audioRef);\n                return;\n            }\n            setCurrentSong(songs[(currentIndex-1) % songs.length]);\n            \n        }\n        playAudio(isPlaying, audioRef);\n    }\n    //Add styles\n    const trackAnim = {\n        transform: `translateX(${songInfo.animationPercentage}%)`\n    }\n    return(\n        <div className=\"player\">\n            <div className=\"play-control\">\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-back')} className=\"skip-back\" size=\"2x\" icon={faAngleLeft} />\n                <FontAwesomeIcon onClick={playSongHandler} className=\"play\" size=\"2x\" icon={isPlaying ? faPause : faPlay} />\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-forward')} className=\"skip-forward\" size=\"2x\" icon={faAngleRight} />\n            </div>\n            <div className=\"time-control\">\n                <p>{getTime(songInfo.currentTime)}</p>\n                <div style={{background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`}} className=\"track\">\n                    <input onChange={dragHandler} min={0} max={songInfo.duration || 0} value={songInfo.currentTime} type=\"range\" />\n                    <div style={trackAnim} className=\"animate-track\"></div>\n                </div>\n                <p>{getTime(songInfo.duration)}</p>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Player;","/Users/BenMcNally/react-music/src/components/Song.js",[],"/Users/BenMcNally/react-music/src/data.js",[],"/Users/BenMcNally/react-music/src/components/Library.js",[],"/Users/BenMcNally/react-music/src/components/LibrarySong.js",[],"/Users/BenMcNally/react-music/src/components/Nav.js",[],"/Users/BenMcNally/react-music/src/util.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":24,"column":8,"nodeType":"53","endLine":24,"endColumn":21,"suggestions":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setSongs' and 'songs'. Either include them or remove the dependency array. If 'setSongs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["57"],"no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [currentSong, setSongs, songs]",{"range":"60","text":"61"},[786,799],"[currentSong, setSongs, songs]"]